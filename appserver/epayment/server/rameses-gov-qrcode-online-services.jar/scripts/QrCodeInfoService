import com.rameses.annotations.*;
import com.rameses.util.Compression;
import com.rameses.util.Base64Cipher;

class QrCodeInfoService {
	
	@ProxyMethod
	public def getInfos(params) {
		return [];
	}

	@ProxyMethod
	public def encode( param ) {
		return [ data: new Compression().deflateToString( param ) ];
	}

	@ProxyMethod
	public def getData( param ) {
		def res = encode( param );
		def buff = new StringBuilder();
		buff.append( param.host ? param.host : 'https://www.filipizen.com' );
		buff.append('/qr?data=').append( res.data ); 
		return buff.toString(); 
	}

	@ProxyMethod
	public def decode( param ) {
		if ( !param.data ) throw new Exception('data must be specified');

		def encstr = param.data.toString().replace(' ','+');
		def res = new Compression().inflate( encstr );
		if ( res instanceof Map || res instanceof List ) {
			return res; 
		}
		throw new Exception('Data is invalid.');
	}
}
